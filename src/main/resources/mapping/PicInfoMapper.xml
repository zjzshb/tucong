<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.PicInfoMapper">
  <resultMap id="BaseResultMap" type="com.bo.PicInfo">
    <id column="PIC_ID" jdbcType="INTEGER" property="picId" />
    <result column="PIC_ADDRESS" jdbcType="VARCHAR" property="picAddress" />
    <result column="PIC_GROUP_ID" jdbcType="INTEGER" property="picGroupId" />
    <result column="PIC_UP_DATE" jdbcType="VARCHAR" property="picUpDate" />
    <result column="PIC_UP_USER" jdbcType="INTEGER" property="picUpUser" />
    <result column="PIC_STATE" jdbcType="VARCHAR" property="picState" />
    <result column="PIC_SIZE" jdbcType="VARCHAR" property="picSize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PIC_ID, PIC_ADDRESS, PIC_GROUP_ID, PIC_UP_DATE, PIC_UP_USER, PIC_STATE, PIC_SIZE
  </sql>
  <select id="selectByExample" parameterType="com.bo.PicInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PIC_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PIC_INFO
    where PIC_ID = #{picId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from PIC_INFO
    where PIC_ID = #{picId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bo.PicInfoExample">
    delete from PIC_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bo.PicInfo" useGeneratedKeys="true" keyProperty="picId">
    insert into PIC_INFO (PIC_ID, PIC_ADDRESS, PIC_GROUP_ID, 
      PIC_UP_DATE, PIC_UP_USER, PIC_STATE, 
      PIC_SIZE)
    values (#{picId,jdbcType=INTEGER}, #{picAddress,jdbcType=VARCHAR}, #{picGroupId,jdbcType=INTEGER}, 
      #{picUpDate,jdbcType=VARCHAR}, #{picUpUser,jdbcType=INTEGER}, #{picState,jdbcType=VARCHAR}, 
      #{picSize,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bo.PicInfo">
    insert into PIC_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="picId != null">
        PIC_ID,
      </if>
      <if test="picAddress != null">
        PIC_ADDRESS,
      </if>
      <if test="picGroupId != null">
        PIC_GROUP_ID,
      </if>
      <if test="picUpDate != null">
        PIC_UP_DATE,
      </if>
      <if test="picUpUser != null">
        PIC_UP_USER,
      </if>
      <if test="picState != null">
        PIC_STATE,
      </if>
      <if test="picSize != null">
        PIC_SIZE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="picId != null">
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="picAddress != null">
        #{picAddress,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null">
        #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="picUpDate != null">
        #{picUpDate,jdbcType=VARCHAR},
      </if>
      <if test="picUpUser != null">
        #{picUpUser,jdbcType=INTEGER},
      </if>
      <if test="picState != null">
        #{picState,jdbcType=VARCHAR},
      </if>
      <if test="picSize != null">
        #{picSize,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bo.PicInfoExample" resultType="java.lang.Long">
    select count(*) from PIC_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PIC_INFO
    <set>
      <if test="record.picId != null">
        PIC_ID = #{record.picId,jdbcType=INTEGER},
      </if>
      <if test="record.picAddress != null">
        PIC_ADDRESS = #{record.picAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.picGroupId != null">
        PIC_GROUP_ID = #{record.picGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.picUpDate != null">
        PIC_UP_DATE = #{record.picUpDate,jdbcType=VARCHAR},
      </if>
      <if test="record.picUpUser != null">
        PIC_UP_USER = #{record.picUpUser,jdbcType=INTEGER},
      </if>
      <if test="record.picState != null">
        PIC_STATE = #{record.picState,jdbcType=VARCHAR},
      </if>
      <if test="record.picSize != null">
        PIC_SIZE = #{record.picSize,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PIC_INFO
    set PIC_ID = #{record.picId,jdbcType=INTEGER},
      PIC_ADDRESS = #{record.picAddress,jdbcType=VARCHAR},
      PIC_GROUP_ID = #{record.picGroupId,jdbcType=INTEGER},
      PIC_UP_DATE = #{record.picUpDate,jdbcType=VARCHAR},
      PIC_UP_USER = #{record.picUpUser,jdbcType=INTEGER},
      PIC_STATE = #{record.picState,jdbcType=VARCHAR},
      PIC_SIZE = #{record.picSize,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bo.PicInfo">
    update PIC_INFO
    <set>
      <if test="picAddress != null">
        PIC_ADDRESS = #{picAddress,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null">
        PIC_GROUP_ID = #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="picUpDate != null">
        PIC_UP_DATE = #{picUpDate,jdbcType=VARCHAR},
      </if>
      <if test="picUpUser != null">
        PIC_UP_USER = #{picUpUser,jdbcType=INTEGER},
      </if>
      <if test="picState != null">
        PIC_STATE = #{picState,jdbcType=VARCHAR},
      </if>
      <if test="picSize != null">
        PIC_SIZE = #{picSize,jdbcType=VARCHAR},
      </if>
    </set>
    where PIC_ID = #{picId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bo.PicInfo">
    update PIC_INFO
    set PIC_ADDRESS = #{picAddress,jdbcType=VARCHAR},
      PIC_GROUP_ID = #{picGroupId,jdbcType=INTEGER},
      PIC_UP_DATE = #{picUpDate,jdbcType=VARCHAR},
      PIC_UP_USER = #{picUpUser,jdbcType=INTEGER},
      PIC_STATE = #{picState,jdbcType=VARCHAR},
      PIC_SIZE = #{picSize,jdbcType=VARCHAR}
    where PIC_ID = #{picId,jdbcType=INTEGER}
  </update>
  <select id="qryPhotoByCondition" parameterType="com.bo.QryPhotoBean" resultType="com.bo.QryPhotoBean">
    SELECT
	*
FROM
	(
		SELECT
            g.PIC_DESCRIBE as picDescribe,
            g.PIC_GROUP_ID as picGroupId,
            g.PIC_GROUP_STATE as  picGroupState,
            g.PIC_TITLE as picTitle,
            g.PIC_UP_DATE as picUpDate,
            g.USER_ID as userId,
            li.PIC_LABEL_NAME as picLabelName,
            li.PIC_LABEL_ID as picLabelId,
            u.U_NICKNAME as uNickname,
			(
				SELECT
					COUNT(*)
				FROM
					PIC_COMMENT_REL AS c
				WHERE
					c.PIC_GROUP_ID = g.PIC_GROUP_ID
                    and c.COMM_STATE = '1'
			) AS commentNum,
			(
				SELECT
					COUNT(*)
				FROM
					PIC_LIKE_REL AS l
				WHERE
					l.PIC_ID = g.PIC_GROUP_ID
			) AS likeNum,
			(
				SELECT
					PIC_INFO.PIC_ADDRESS
				FROM
					PIC_GROUP_INFO,
					PIC_INFO
				WHERE
					g.PIC_GROUP_ID = PIC_INFO.PIC_GROUP_ID LIMIT 0,1
			) AS picAdress
		FROM
			PIC_GROUP_INFO AS g,
			PIC_LABEL_INFO AS li,
			PIC_LABEL_REL AS lr,
			USER_INFO as u
		WHERE
			g.PIC_GROUP_ID = lr.PIC_GROUP_ID
		AND lr.PIC_LABEL_ID = li.PIC_LABEL_ID
		AND u.USER_ID = g.USER_ID
	) a

      WHERE 1=1
      <if test="picTitle != null">
          and picTitle = #{picTitle,jdbcType=VARCHAR}
      </if>
      <if test="userId != null">
          and userId = #{userId,jdbcType=INTEGER}
      </if>
      <if test="picLabelName != null">
          and picLabelName = #{picLabelName,jdbcType=VARCHAR}
      </if>
    <if test="picLabelId != null">
      and picLabelId = #{picLabelId,jdbcType=INTEGER}
    </if>
    <if test="qryStartDate != null">
      and picUpDate &gt;= #{qryStartDate,jdbcType=VARCHAR}
    </if>

    <if test="qryEndDate != null">
      and picUpDate &lt;= #{qryEndDate,jdbcType=VARCHAR}
    </if>
    <if test="picGroupState != null">
      and picGroupState = #{picGroupState,jdbcType=VARCHAR}
    </if>

    <if test="start != null and end !=null " >
      LIMIT #{start,jdbcType=INTEGER} ,#{end,jdbcType=INTEGER};
    </if>



  </select>

  <select id="qryPhotoDetailByCondition" parameterType="com.bo.QryPhotoDetailBean" resultType="com.bo.QryPhotoDetailBean">
    SELECT
      p.PIC_GROUP_ID AS groupId,
      p.PIC_DESCRIBE AS picDescribe,
      p.PIC_UP_DATE AS picUpDate,
      p.USER_ID AS userId,
      p.PIC_TITLE AS picTitle,
      u.U_NICKNAME AS nikeName
    FROM
      PIC_GROUP_INFO AS p,
      USER_INFO AS u
    WHERE
      p.USER_ID = u.USER_ID
      AND p.PIC_GROUP_STATE = '1'
    <if test="groupId!=null">
      AND  p.PIC_GROUP_ID = #{groupId,jdbcType=INTEGER}
    </if>

  </select>
</mapper>